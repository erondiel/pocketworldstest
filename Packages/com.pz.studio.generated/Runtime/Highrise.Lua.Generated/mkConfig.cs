/*

    Copyright (c) 2025 Pocketz World. All rights reserved.

    This is a generated file, do not edit!

    Generated by com.pz.studio
*/

#if UNITY_EDITOR

using System;
using System.Linq;
using UnityEngine;
using Highrise.Client;
using Highrise.Studio;
using Highrise.Lua;
using UnityEditor;

namespace Highrise.Lua.Generated
{
    [AddComponentMenu("Lua/mkConfig")]
    [LuaRegisterType(0x9e8ec99a10976fbb, typeof(LuaBehaviour))]
    public class mkConfig : LuaBehaviourThunk
    {
        private const string s_scriptGUID = "ae7bec5d6e8ce6a4c80d0d6c215573d0";
        public override string ScriptGUID => s_scriptGUID;

        [Tooltip("Enable debug mode")]
        [SerializeField] public System.Boolean _EnableDebug = false;
        [Tooltip("Minimum number of players to start the game")]
        [SerializeField] public System.Double _MinPlayersToStart = 1;
        [Tooltip("Time in seconds before the game starts")]
        [SerializeField] public System.Double _StartingTime = 5;
        [Tooltip("Time in seconds for each round")]
        [SerializeField] public System.Double _RoundTime = 10;
        [Tooltip("Maximum number of rounds to play")]
        [SerializeField] public System.Double _MaxRounds = 3;
        [Tooltip("HUD update interval in seconds")]
        [SerializeField] public System.Double _HUDUpdateInterval = 1;
        [Tooltip("Allow players to join mid-game")]
        [SerializeField] public System.Boolean _AllowMidGameJoin = true;

        protected override SerializedPropertyValue[] SerializeProperties()
        {
            if (_script == null)
                return Array.Empty<SerializedPropertyValue>();

            return new SerializedPropertyValue[]
            {
                CreateSerializedProperty(_script.GetPropertyAt(0), _EnableDebug),
                CreateSerializedProperty(_script.GetPropertyAt(1), _MinPlayersToStart),
                CreateSerializedProperty(_script.GetPropertyAt(2), _StartingTime),
                CreateSerializedProperty(_script.GetPropertyAt(3), _RoundTime),
                CreateSerializedProperty(_script.GetPropertyAt(4), _MaxRounds),
                CreateSerializedProperty(_script.GetPropertyAt(5), _HUDUpdateInterval),
                CreateSerializedProperty(_script.GetPropertyAt(6), _AllowMidGameJoin),
            };
        }
        
#if HR_STUDIO
        [MenuItem("CONTEXT/mkConfig/Edit Script")]
        private static void EditScript()
        {
            VisualStudioCodeOpener.OpenPath(AssetDatabase.GUIDToAssetPath(s_scriptGUID));
        }
#endif
    }
}

#endif
