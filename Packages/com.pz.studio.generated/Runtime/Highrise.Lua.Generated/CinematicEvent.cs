/*

    Copyright (c) 2025 Pocketz World. All rights reserved.

    This is a generated file, do not edit!

    Generated by com.pz.studio
*/

#if UNITY_EDITOR

using System;
using System.Linq;
using UnityEngine;
using Highrise.Client;
using Highrise.Studio;
using Highrise.Lua;
using UnityEditor;

namespace Highrise.Lua.Generated
{
    [AddComponentMenu("Lua/CinematicEvent")]
    [LuaRegisterType(0x4e13d241b49ae59a, typeof(LuaBehaviour))]
    public class CinematicEvent : LuaBehaviourThunk
    {
        private const string s_scriptGUID = "84d245359f87ad0418549450f68a0696";
        public override string ScriptGUID => s_scriptGUID;

        [Tooltip("The type of this cinematic event")]
        [SerializeField] public System.Double _eventType = 1;
        [Tooltip("The type of camera transition")]
        [LuaScriptPropertyAttribute("f22133e84eb01b544ad9c21caf1de7e1")]
        [SerializeField] public UnityEngine.Object _transitionType = default;
        [Tooltip("The type of transition mask")]
        [LuaScriptPropertyAttribute("d94f2a267ce7ba44aa5223c534f2de0b")]
        [SerializeField] public UnityEngine.Object _maskType = default;
        [Tooltip("The type of fade out")]
        [LuaScriptPropertyAttribute("9645d1880d43fcb4a9a6715b6384a4d5")]
        [SerializeField] public UnityEngine.Object _fadeType = default;
        [Tooltip("Whether or not to show this effect")]
        [SerializeField] public System.Boolean _show = false;
        [Tooltip("The target of this event")]
        [SerializeField] public UnityEngine.GameObject _target = default;
        [Tooltip("The duration of this event")]
        [SerializeField] public System.Double _duration = 1;
        [Tooltip("Should the cinematic sequence pause until this event is finished?")]
        [SerializeField] public System.Boolean _waitForFinish = false;
        [Tooltip("A custom string to attach to the CustomEventFactory event - choose anything")]
        [SerializeField] public System.String _customEvent = "";

        protected override SerializedPropertyValue[] SerializeProperties()
        {
            if (_script == null)
                return Array.Empty<SerializedPropertyValue>();

            return new SerializedPropertyValue[]
            {
                CreateSerializedProperty(_script.GetPropertyAt(0), _eventType),
                CreateSerializedProperty(_script.GetPropertyAt(1), _transitionType),
                CreateSerializedProperty(_script.GetPropertyAt(2), _maskType),
                CreateSerializedProperty(_script.GetPropertyAt(3), _fadeType),
                CreateSerializedProperty(_script.GetPropertyAt(4), _show),
                CreateSerializedProperty(_script.GetPropertyAt(5), _target),
                CreateSerializedProperty(_script.GetPropertyAt(6), _duration),
                CreateSerializedProperty(_script.GetPropertyAt(7), _waitForFinish),
                CreateSerializedProperty(_script.GetPropertyAt(8), _customEvent),
            };
        }
        
#if HR_STUDIO
        [MenuItem("CONTEXT/CinematicEvent/Edit Script")]
        private static void EditScript()
        {
            VisualStudioCodeOpener.OpenPath(AssetDatabase.GUIDToAssetPath(s_scriptGUID));
        }
#endif
    }
}

#endif
