/*

    Copyright (c) 2025 Pocketz World. All rights reserved.

    This is a generated file, do not edit!

    Generated by com.pz.studio
*/

#if UNITY_EDITOR

using System;
using System.Linq;
using UnityEngine;
using Highrise.Client;
using Highrise.Studio;
using Highrise.Lua;
using UnityEditor;

namespace Highrise.Lua.Generated
{
    [AddComponentMenu("Lua/CheckPointsManager")]
    [LuaRegisterType(0x33cdb81ad1add91b, typeof(LuaBehaviour))]
    public class CheckPointsManager : LuaBehaviourThunk
    {
        private const string s_scriptGUID = "66e1308ba5aaaa94aaaf31eb76085718";
        public override string ScriptGUID => s_scriptGUID;

        [Tooltip("If you reach a check point, the old check points will be disabled")]
        [SerializeField] public System.Boolean _DisableCheckPointsOnReach = true;
        [Tooltip("Play audio on change check point")]
        [SerializeField] public System.Boolean _PlayAudioOnChange = true;
        [Tooltip("Audio clip to play when changing check point")]
        [SerializeField] public Highrise.AudioShader _AudioClip = default;
        [Tooltip("Display popup on change check point")]
        [SerializeField] public System.Boolean _DisplayPopupOnChange = true;
        [Tooltip("List of check points")]
        [SerializeField] public System.Collections.Generic.List<UnityEngine.GameObject> _CheckPoints = default;
        [Tooltip("The main check point")]
        [SerializeField] public System.Double _DefaultCheckPointID = 1;
        [Tooltip("Play particles on spawn")]
        [SerializeField] public System.Boolean _PlayParticlesOnSpawn = true;
        [Tooltip("Particles to play on spawn")]
        [SerializeField] public UnityEngine.GameObject _ParticlesOnSpawn = default;
        [Tooltip("Duration of the particles on spawn")]
        [SerializeField] public System.Double _ParticlesOnSpawnDuration = 5;
        [Tooltip("Storage key")]
        [SerializeField] public System.String _StorageKey = "CheckPoint";

        protected override SerializedPropertyValue[] SerializeProperties()
        {
            if (_script == null)
                return Array.Empty<SerializedPropertyValue>();

            return new SerializedPropertyValue[]
            {
                CreateSerializedProperty(_script.GetPropertyAt(0), _DisableCheckPointsOnReach),
                CreateSerializedProperty(_script.GetPropertyAt(1), _PlayAudioOnChange),
                CreateSerializedProperty(_script.GetPropertyAt(2), _AudioClip),
                CreateSerializedProperty(_script.GetPropertyAt(3), _DisplayPopupOnChange),
                CreateSerializedProperty(_script.GetPropertyAt(4), _CheckPoints),
                CreateSerializedProperty(_script.GetPropertyAt(5), _DefaultCheckPointID),
                CreateSerializedProperty(_script.GetPropertyAt(6), _PlayParticlesOnSpawn),
                CreateSerializedProperty(_script.GetPropertyAt(7), _ParticlesOnSpawn),
                CreateSerializedProperty(_script.GetPropertyAt(8), _ParticlesOnSpawnDuration),
                CreateSerializedProperty(_script.GetPropertyAt(9), _StorageKey),
            };
        }
        
#if HR_STUDIO
        [MenuItem("CONTEXT/CheckPointsManager/Edit Script")]
        private static void EditScript()
        {
            VisualStudioCodeOpener.OpenPath(AssetDatabase.GUIDToAssetPath(s_scriptGUID));
        }
#endif
    }
}

#endif
