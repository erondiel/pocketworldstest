/*

    Copyright (c) 2025 Pocketz World. All rights reserved.

    This is a generated file, do not edit!

    Generated by com.pz.studio
*/

#if UNITY_EDITOR

using System;
using System.Linq;
using UnityEngine;
using Highrise.Client;
using Highrise.Studio;
using Highrise.Lua;
using UnityEditor;

namespace Highrise.Lua.Generated
{
    [AddComponentMenu("Lua/PropHuntRangeIndicator")]
    [LuaRegisterType(0xd462a080f0fd20f7, typeof(LuaBehaviour))]
    public class PropHuntRangeIndicator : LuaBehaviourThunk
    {
        private const string s_scriptGUID = "6819554eed1f0934a99e3edb8bbb9d33";
        public override string ScriptGUID => s_scriptGUID;

        [Tooltip("The range indicator prefab from the Range Indicator asset")]
        [SerializeField] public UnityEngine.GameObject _RangeIndicatorPrefab = default;
        [Tooltip("The color of the hunter's range indicator (default: red/orange for hunter theme)")]
        [SerializeField] public UnityEngine.Color _IndicatorColor = new Color(1f, 0.3f, 0.1f, 0.6f);
        [Tooltip("Enable breathing animation for the range indicator")]
        [SerializeField] public System.Boolean _EnableBreathingAnimation = true;
        [Tooltip("Speed of the breathing animation")]
        [SerializeField] public System.Double _AnimationSpeed = 1.5;

        protected override SerializedPropertyValue[] SerializeProperties()
        {
            if (_script == null)
                return Array.Empty<SerializedPropertyValue>();

            return new SerializedPropertyValue[]
            {
                CreateSerializedProperty(_script.GetPropertyAt(0), _RangeIndicatorPrefab),
                CreateSerializedProperty(_script.GetPropertyAt(1), _IndicatorColor),
                CreateSerializedProperty(_script.GetPropertyAt(2), _EnableBreathingAnimation),
                CreateSerializedProperty(_script.GetPropertyAt(3), _AnimationSpeed),
            };
        }
        
#if HR_STUDIO
        [MenuItem("CONTEXT/PropHuntRangeIndicator/Edit Script")]
        private static void EditScript()
        {
            VisualStudioCodeOpener.OpenPath(AssetDatabase.GUIDToAssetPath(s_scriptGUID));
        }
#endif
    }
}

#endif
