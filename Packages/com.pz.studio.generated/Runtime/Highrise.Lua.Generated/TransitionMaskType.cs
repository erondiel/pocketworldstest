/*

    Copyright (c) 2025 Pocketz World. All rights reserved.

    This is a generated file, do not edit!

    Generated by com.pz.studio
*/

#if UNITY_EDITOR

using System;
using System.Linq;
using UnityEngine;
using Highrise.Client;
using Highrise.Studio;
using Highrise.Lua;
using UnityEditor;

namespace Highrise.Lua.Generated
{
    [CreateAssetMenu(menuName = "Highrise/ScriptableObjects/TransitionMaskType")]
    [LuaRegisterType(0x9dea3162a1f4e5ca, typeof(LuaScriptableObject))]
    public class TransitionMaskType : LuaScriptableObjectThunk
    {
        private const string s_scriptGUID = "d94f2a267ce7ba44aa5223c534f2de0b";
        public override string ScriptGUID => s_scriptGUID;

        [SerializeField] public System.String _description = "New Mask";
        [SerializeField] public UnityEngine.Sprite _maskTexture = default;
        [SerializeField] public UnityEngine.Color _maskColor = new Color(0f, 0f, 0f, 1f);
        [Tooltip("The angle at which the mask will enter view. 0 is from the left, 90 is from the bottom, 180 is right, and -90 is top.")]
        [Range(-180,180)]
        [SerializeField] public System.Double _enterAngle = 0;
        [Tooltip("The angle at which the mask will exit view. 0 is to the right, 90 is to the top, 180 is left, and -90 is bottom.")]
        [Range(-180,180)]
        [SerializeField] public System.Double _exitAngle = 0;
        [Tooltip("Attempt to keep the transition mask upright. This is useful for custom transitions with text, logos, etc.")]
        [SerializeField] public System.Boolean _keepUpright = false;

        protected override SerializedPropertyValue[] SerializeProperties()
        {
            if (_script == null)
                return Array.Empty<SerializedPropertyValue>();

            return new SerializedPropertyValue[]
            {
                CreateSerializedProperty(_script.GetPropertyAt(0), _description),
                CreateSerializedProperty(_script.GetPropertyAt(1), _maskTexture),
                CreateSerializedProperty(_script.GetPropertyAt(2), _maskColor),
                CreateSerializedProperty(_script.GetPropertyAt(3), _enterAngle),
                CreateSerializedProperty(_script.GetPropertyAt(4), _exitAngle),
                CreateSerializedProperty(_script.GetPropertyAt(5), _keepUpright),
            };
        }
        
#if HR_STUDIO
        [MenuItem("CONTEXT/TransitionMaskType/Edit Script")]
        private static void EditScript()
        {
            VisualStudioCodeOpener.OpenPath(AssetDatabase.GUIDToAssetPath(s_scriptGUID));
        }
#endif
    }
}

#endif
