/*

    Copyright (c) 2025 Pocketz World. All rights reserved.

    This is a generated file, do not edit!

    Generated by com.pz.studio
*/

#if UNITY_EDITOR

using System;
using System.Linq;
using UnityEngine;
using Highrise.Client;
using Highrise.Studio;
using Highrise.Lua;
using UnityEditor;

namespace Highrise.Lua.Generated
{
    [AddComponentMenu("Lua/CinematicCamera")]
    [LuaRegisterType(0x37504afec01e879d, typeof(LuaBehaviour))]
    public class CinematicCamera : LuaBehaviourThunk
    {
        private const string s_scriptGUID = "32d8268b2db2bdf4ea2c917202449316";
        public override string ScriptGUID => s_scriptGUID;

        [Tooltip("Whether to snap the cinematic camera to the orientation & perspective of the main camera when enabled")]
        [SerializeField] public System.Boolean _snapToMain = true;
        [Tooltip("Whether to return the cinematic camera to the orientation of the main camera when a cutscene has finished")]
        [SerializeField] public System.Boolean _returnToMain = true;
        [Tooltip("How long should it take to return to the main camera's orientation?")]
        [SerializeField] public System.Double _returnTime = 1;
        [Tooltip("Which transition type should be used when none is specified?")]
        [LuaScriptPropertyAttribute("f22133e84eb01b544ad9c21caf1de7e1")]
        [SerializeField] public UnityEngine.Object _defaultTransitionType = default;
        [Tooltip("Which transition type should be used when none is specified?")]
        [LuaScriptPropertyAttribute("d94f2a267ce7ba44aa5223c534f2de0b")]
        [SerializeField] public UnityEngine.Object _defaultTransitionMask = default;
        [Tooltip("Which fade type should be used when none is specified?")]
        [LuaScriptPropertyAttribute("9645d1880d43fcb4a9a6715b6384a4d5")]
        [SerializeField] public UnityEngine.Object _defaultFadeType = default;

        protected override SerializedPropertyValue[] SerializeProperties()
        {
            if (_script == null)
                return Array.Empty<SerializedPropertyValue>();

            return new SerializedPropertyValue[]
            {
                CreateSerializedProperty(_script.GetPropertyAt(0), _snapToMain),
                CreateSerializedProperty(_script.GetPropertyAt(1), _returnToMain),
                CreateSerializedProperty(_script.GetPropertyAt(2), _returnTime),
                CreateSerializedProperty(_script.GetPropertyAt(3), _defaultTransitionType),
                CreateSerializedProperty(_script.GetPropertyAt(4), _defaultTransitionMask),
                CreateSerializedProperty(_script.GetPropertyAt(5), _defaultFadeType),
            };
        }
        
#if HR_STUDIO
        [MenuItem("CONTEXT/CinematicCamera/Edit Script")]
        private static void EditScript()
        {
            VisualStudioCodeOpener.OpenPath(AssetDatabase.GUIDToAssetPath(s_scriptGUID));
        }
#endif
    }
}

#endif
